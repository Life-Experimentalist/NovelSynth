class NovelSynthPopup{constructor(){this.currentTab="enhance",this.settings={},this.functions=["enhance","analyze","summarize"],this.serviceRegistry=new Map,this.availableServices=["gemini","openai","anthropic","local"],this.validatedApiKeys=new Map,this.init()}init(){this.setupTabs(),this.setupButtons(),this.setupSliders(),this.setupResize(),this.setupProviderHandlers(),this.loadSettings(),this.updatePageInfo(),this.setupEventListeners()}setupTabs(){const e=document.querySelectorAll(".tab-btn"),t=document.querySelectorAll(".tab-content");e.forEach((n=>{n.addEventListener("click",(()=>{const a=n.getAttribute("data-tab");e.forEach((e=>e.classList.remove("active"))),t.forEach((e=>e.classList.remove("active"))),n.classList.add("active"),document.getElementById(a).classList.add("active"),this.currentTab=a}))}))}setupButtons(){this.functions.forEach((e=>{const t=document.getElementById(`${e}Btn`);t&&t.addEventListener("click",(()=>{this.executeAction(e)}));const n=document.getElementById(`test${this.capitalize(e)}ApiKey`);n&&n.addEventListener("click",(()=>{this.testApiKey(e)}))}));const e=document.getElementById("saveSettings");e&&e.addEventListener("click",(()=>{this.saveSettings()}));const t=document.getElementById("resetSettings");t&&t.addEventListener("click",(()=>{this.resetSettings()}));const n=document.getElementById("suggestionsBtn");n&&n.addEventListener("click",(()=>{this.executeAction("suggestions")}))}setupSliders(){document.querySelectorAll(".slider").forEach((e=>{const t=document.getElementById(e.id.replace("Slider","Value"));t&&e.addEventListener("input",(()=>{t.textContent=e.value}))}))}setupResize(){const e=document.querySelector(".resize-handle"),t=document.querySelector(".container");if(e&&t){let n,a,s,i,o=!1;function r(e){if(!o)return;const t=s+(e.clientX-n),r=i+(e.clientY-a);t>=380&&t<=650&&(document.body.style.width=t+"px"),r>=550&&r<=800&&(document.body.style.height=r+"px")}function l(){o=!1,document.removeEventListener("mousemove",r),document.removeEventListener("mouseup",l)}e.addEventListener("mousedown",(e=>{o=!0,n=e.clientX,a=e.clientY,s=parseInt(window.getComputedStyle(document.body).width),i=parseInt(window.getComputedStyle(document.body).height),document.addEventListener("mousemove",r),document.addEventListener("mouseup",l),e.preventDefault()}))}}setupProviderHandlers(){this.functions.forEach((e=>{const t=document.getElementById(`${e}Provider`);t&&t.addEventListener("change",(async()=>{await this.updateModelOptions(e)}))}))}setupEventListeners(){this.functions.forEach((e=>{document.querySelectorAll(`#${e}Provider, #${e}Model, #${e}ApiKey, #${e}Prompt`).forEach((t=>{t.addEventListener("change",(()=>{this.saveFunctionSettings(e)}))}))})),document.querySelectorAll("#temperatureSlider, #maxTokens, #autoDetect, #showBanner, #enableChunking").forEach((e=>{e.addEventListener("change",(()=>{this.saveSettings()}))}))}async executeAction(e){const t=document.getElementById(e+"Btn");if(!t)return;const n=t.querySelector(".btn-text").textContent,a=`${e}StatusMessage`;this.showStatus(`${this.capitalize(e)}ing content...`,"processing",a),t.querySelector(".btn-text").textContent="Processing...",t.disabled=!0;try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0}),n=this.getFunctionSettings(e),s=await chrome.tabs.sendMessage(t.id,{action:e,settings:{...this.settings,...n}});if(!s||!s.success)throw new Error(s?.error||"Unknown error");this.showStatus(`${this.capitalize(e)} completed successfully!`,"success",a)}catch(t){console.error(`${e} error:`,t),this.showStatus(`${this.capitalize(e)} failed: ${t.message}`,"error",a)}finally{t.querySelector(".btn-text").textContent=n,t.disabled=!1,setTimeout((()=>{this.hideStatus(a)}),3e3)}}async testApiKey(e){const t=document.getElementById(`${e}ApiKey`),n=document.getElementById(`${e}Provider`);if(!t||!n)return;const a=t.value,s=n.value;if(!a)return void this.showStatus("Please enter an API key first","error");const i=document.getElementById(`test${this.capitalize(e)}ApiKey`),o=i.textContent;i.textContent="Testing...",i.disabled=!0;try{await this.performApiTest(s,a),await this.validateAndRegisterService(s,a),this.showStatus(`${this.capitalize(s)} API key is valid! Service registered.`,"success"),await this.updateModelOptions(e),await this.refreshAllProviderDropdowns()}catch(e){this.showStatus(`${this.capitalize(s)} API key test failed: ${e.message}`,"error")}finally{i.textContent=o,i.disabled=!1}}async validateAndRegisterService(e,t){try{const n=await this.fetchModelsByProvider(e,t);this.serviceRegistry.set(e,{apiKey:t,models:n,validated:!0,lastValidated:(new Date).toISOString()}),this.validatedApiKeys.set(e,t),await this.saveServiceRegistry(),console.log(`Service ${e} registered with ${n.length} models`)}catch(t){throw console.error(`Failed to register service ${e}:`,t),t}}async fetchModelsByProvider(e,t){switch(e){case"gemini":return await this.fetchGeminiModels(t);case"openai":return await this.fetchOpenAIModels(t);case"anthropic":return await this.fetchAnthropicModels(t);case"local":return await this.fetchLocalModels();default:return this.getStaticModelOptions(e)}}async refreshAllProviderDropdowns(){this.functions.forEach((e=>{this.updateProviderDropdown(e)}))}updateProviderDropdown(e){const t=document.getElementById(`${e}Provider`);if(!t)return;t.innerHTML="";const n=document.createElement("option");n.value="",n.textContent="Select a service...",n.disabled=!0,n.selected=!0,t.appendChild(n),this.serviceRegistry.forEach(((e,n)=>{if(e.validated){const a=document.createElement("option");a.value=n,a.textContent=this.formatProviderName(n)+` (${e.models.length} models)`,t.appendChild(a)}})),this.availableServices.forEach((e=>{if(!this.serviceRegistry.has(e)){const n=document.createElement("option");n.value=e,n.textContent=this.formatProviderName(e)+" (Not configured)",n.style.color="#999",t.appendChild(n)}}))}formatProviderName(e){return{gemini:"Google Gemini",openai:"OpenAI",anthropic:"Anthropic Claude",local:"Local Models"}[e]||e}async performApiTest(e,t){if(!t||"string"!=typeof t)throw new Error("Invalid API key format");switch(await new Promise((e=>setTimeout(e,1e3))),e){case"openai":if(!t.startsWith("sk-"))throw new Error("Invalid OpenAI key format");break;case"anthropic":if(!t.startsWith("sk-ant-"))throw new Error("Invalid Anthropic key format");break;case"gemini":if(t.length<20)throw new Error("Invalid Gemini key format");break;case"local":break;default:throw new Error(`Unknown provider: ${e}`)}}async updatePageInfo(){try{const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!e||!e.id)throw new Error("No active tab found");if(e.url.startsWith("chrome://")||e.url.startsWith("chrome-extension://")||e.url.startsWith("edge://"))return void this.setPageInfoUnavailable();const t=await chrome.tabs.sendMessage(e.id,{action:"getPageInfo"});if(t&&!t.error){const e=document.getElementById("pageStatus"),n=document.getElementById("contentType"),a=document.getElementById("wordCount");e&&(e.textContent=t.status||"Ready"),n&&(n.textContent=t.contentType||"Unknown"),a&&(a.textContent=t.wordCount||"-")}else this.setPageInfoUnavailable()}catch(e){console.log("Page info not available:",e.message),this.setPageInfoUnavailable()}}setPageInfoUnavailable(){const e=document.getElementById("pageStatus"),t=document.getElementById("contentType"),n=document.getElementById("wordCount");e&&(e.textContent="Not Available"),t&&(t.textContent="Not Detected"),n&&(n.textContent="-")}async updateModelOptions(e){const t=document.getElementById(`${e}Provider`).value,n=document.getElementById(`${e}Model`);if(n&&t){n.innerHTML='<option value="">Loading models...</option>',n.disabled=!0;try{let a=[];if(a=this.serviceRegistry.has(t)&&this.serviceRegistry.get(t).validated?this.serviceRegistry.get(t).models:await this.fetchModelOptions(t),n.innerHTML="",n.disabled=!1,0===a.length)return void(n.innerHTML='<option value="">No models available - please configure service</option>');a.forEach((e=>{const t=document.createElement("option");t.value=e.value,t.textContent=e.text,e.recommended&&(t.textContent+=" ⭐"),n.appendChild(t)}));const s=this.settings[`${e}Model`];if(s&&a.find((e=>e.value===s)))n.value=s;else{const e=a.find((e=>e.recommended));e?n.value=e.value:a.length>0&&(n.value=a[0].value)}}catch(e){console.error(`Error fetching models for ${t}:`,e),n.innerHTML='<option value="">Error loading models</option>',n.disabled=!1,this.showStatus(`Please configure ${this.formatProviderName(t)} service first`,"warning")}}}async fetchModelOptions(e){switch(e){case"gemini":return await this.fetchGeminiModels();case"openai":return await this.fetchOpenAIModels();case"anthropic":return await this.fetchAnthropicModels();case"local":return await this.fetchLocalModels();default:return this.getStaticModelOptions(e)}}async fetchGeminiModels(e=null){try{const t=e||this.validatedApiKeys.get("gemini");if(t&&t.length>20){const e=await fetch("https://generativelanguage.googleapis.com/v1beta/models?key="+t);if(e.ok){const t=(await e.json()).models.filter((e=>e.name.includes("gemini"))).map((e=>{const t=e.name.split("/").pop();return{value:t,text:this.formatModelName(t),recommended:"gemini-1.5-flash"===t}}));if(t.length>0)return t}}return[{value:"gemini-1.5-flash",text:"Gemini 1.5 Flash",recommended:!0},{value:"gemini-1.5-flash-8b",text:"Gemini 1.5 Flash-8B"},{value:"gemini-1.5-pro",text:"Gemini 1.5 Pro"},{value:"gemini-2.0-flash-exp",text:"Gemini 2.0 Flash (Experimental)"},{value:"gemini-exp-1121",text:"Gemini Experimental 1121"}]}catch(e){return console.error("Error fetching Gemini models:",e),this.getStaticModelOptions("gemini")}}async fetchOpenAIModels(e=null){try{const t=e||this.validatedApiKeys.get("openai");if(t&&t.startsWith("sk-")){const e=await fetch("https://api.openai.com/v1/models",{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"}});if(e.ok){const t=(await e.json()).data.filter((e=>e.id.includes("gpt")||e.id.includes("o1"))).sort(((e,t)=>{const n={"gpt-4o":10,"gpt-4o-mini":9,"o1-preview":8,"o1-mini":7,"gpt-4-turbo":6,"gpt-4":5,"gpt-3.5-turbo":4};return(n[t.id]||0)-(n[e.id]||0)})).map((e=>({value:e.id,text:this.formatModelName(e.id),recommended:"gpt-4o"===e.id})));if(t.length>0)return t}}return[{value:"gpt-4o",text:"GPT-4o",recommended:!0},{value:"gpt-4o-mini",text:"GPT-4o Mini"},{value:"gpt-4-turbo",text:"GPT-4 Turbo"},{value:"gpt-4",text:"GPT-4"},{value:"gpt-3.5-turbo",text:"GPT-3.5 Turbo"},{value:"o1-preview",text:"o1 Preview"},{value:"o1-mini",text:"o1 Mini"}]}catch(e){return console.error("Error fetching OpenAI models:",e),this.getStaticModelOptions("openai")}}async fetchAnthropicModels(e=null){try{return[{value:"claude-3-5-sonnet-20241022",text:"Claude 3.5 Sonnet (Latest)",recommended:!0},{value:"claude-3-5-sonnet-20240620",text:"Claude 3.5 Sonnet (June)"},{value:"claude-3-5-haiku-20241022",text:"Claude 3.5 Haiku"},{value:"claude-3-opus-20240229",text:"Claude 3 Opus"},{value:"claude-3-sonnet-20240229",text:"Claude 3 Sonnet"},{value:"claude-3-haiku-20240307",text:"Claude 3 Haiku"}]}catch(e){return console.error("Error fetching Anthropic models:",e),this.getStaticModelOptions("anthropic")}}async fetchLocalModels(){try{const e=await fetch("http://localhost:11434/api/tags",{method:"GET",headers:{"Content-Type":"application/json"}});if(e.ok){const t=(await e.json()).models.map((e=>({value:e.name,text:this.formatModelName(e.name),recommended:e.name.includes("llama3.1:8b")||e.name.includes("llama3.2:3b")})));if(t.length>0)return t}return[{value:"llama3.1:8b",text:"Llama 3.1 8B",recommended:!0},{value:"llama3.1:70b",text:"Llama 3.1 70B"},{value:"llama3.2:3b",text:"Llama 3.2 3B"},{value:"codellama:7b",text:"Code Llama 7B"},{value:"codellama:13b",text:"Code Llama 13B"},{value:"mistral:7b",text:"Mistral 7B"},{value:"phi3:mini",text:"Phi-3 Mini"},{value:"qwen2.5:7b",text:"Qwen2.5 7B"}]}catch(e){return console.error("Error fetching local models:",e),[{value:"llama3.1:8b",text:"Llama 3.1 8B (Install via Ollama)",recommended:!0},{value:"llama3.2:3b",text:"Llama 3.2 3B (Install via Ollama)"},{value:"codellama:7b",text:"Code Llama 7B (Install via Ollama)"},{value:"mistral:7b",text:"Mistral 7B (Install via Ollama)"}]}}formatModelName(e){return e.replace(/[-_]/g," ").split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ").replace(/Gpt/g,"GPT").replace(/Llama/g,"Llama").replace(/Api/g,"API")}getStaticModelOptions(e){return{gemini:[{value:"gemini-1.5-flash",text:"Gemini 1.5 Flash (Recommended)",recommended:!0},{value:"gemini-1.5-pro",text:"Gemini 1.5 Pro"},{value:"gemini-2.0-flash",text:"Gemini 2.0 Flash"}],openai:[{value:"gpt-4o",text:"GPT-4o (Recommended)",recommended:!0},{value:"gpt-4",text:"GPT-4"},{value:"gpt-4-turbo",text:"GPT-4 Turbo"},{value:"gpt-3.5-turbo",text:"GPT-3.5 Turbo"}],anthropic:[{value:"claude-3-5-sonnet-20241022",text:"Claude 3.5 Sonnet (Recommended)",recommended:!0},{value:"claude-3-sonnet-20240229",text:"Claude 3 Sonnet"},{value:"claude-3-haiku-20240307",text:"Claude 3 Haiku"}],local:[{value:"llama3.1:8b",text:"Llama 3.1 8B (Recommended)",recommended:!0},{value:"llama3.2:3b",text:"Llama 3.2 3B"},{value:"codellama:7b",text:"Code Llama 7B"}]}[e]||[]}async loadSettings(){try{await this.loadServiceRegistry();const e={};this.functions.forEach((t=>{e[`${t}Provider`]="",e[`${t}Model`]="",e[`${t}ApiKey`]="",e[`${t}Prompt`]=""}));const t=await chrome.storage.sync.get([...Object.keys(e),"temperature","maxTokens","autoDetect","showBanner","enableChunking"]);this.functions.forEach((e=>{this.updateProviderDropdown(e)})),this.functions.forEach((e=>{const n=t[`${e}Provider`]||"",a=t[`${e}Model`]||"",s=t[`${e}ApiKey`]||"",i=t[`${e}Prompt`]||"",o=document.getElementById(`${e}Provider`),r=document.getElementById(`${e}Model`),l=document.getElementById(`${e}ApiKey`),c=document.getElementById(`${e}Prompt`);o&&n&&(o.value=n),l&&(l.value=s),c&&(c.value=i),n&&this.updateModelOptions(e).then((()=>{r&&a&&(r.value=a)}))}));const n=document.getElementById("temperatureSlider"),a=document.getElementById("temperatureValue");n&&t.temperature&&(n.value=t.temperature,a&&(a.textContent=t.temperature));const s=document.getElementById("maxTokens");s&&t.maxTokens&&(s.value=t.maxTokens);const i=document.getElementById("autoDetect");i&&void 0!==t.autoDetect&&(i.checked=t.autoDetect);const o=document.getElementById("showBanner");o&&void 0!==t.showBanner&&(o.checked=t.showBanner);const r=document.getElementById("enableChunking");r&&void 0!==t.enableChunking&&(r.checked=t.enableChunking),this.settings=t}catch(e){console.error("Error loading settings:",e)}}async saveServiceRegistry(){try{const e={};this.serviceRegistry.forEach(((t,n)=>{e[`service_${n}`]=t}));const t={};this.validatedApiKeys.forEach(((e,n)=>{t[`apiKey_${n}`]=e})),await chrome.storage.sync.set({...e,...t,serviceRegistryKeys:Array.from(this.serviceRegistry.keys()),validatedApiKeyKeys:Array.from(this.validatedApiKeys.keys())})}catch(e){console.error("Error saving service registry:",e)}}async loadServiceRegistry(){try{const e=await chrome.storage.sync.get(null);e.serviceRegistryKeys&&e.serviceRegistryKeys.forEach((t=>{const n=e[`service_${t}`];n&&this.serviceRegistry.set(t,n)})),e.validatedApiKeyKeys&&e.validatedApiKeyKeys.forEach((t=>{const n=e[`apiKey_${t}`];n&&this.validatedApiKeys.set(t,n)})),console.log(`Loaded ${this.serviceRegistry.size} services and ${this.validatedApiKeys.size} API keys`)}catch(e){console.error("Error loading service registry:",e)}}async saveFunctionSettings(e){const t={};t[`${e}Provider`]=document.getElementById(`${e}Provider`)?.value||"",t[`${e}Model`]=document.getElementById(`${e}Model`)?.value||"",t[`${e}ApiKey`]=document.getElementById(`${e}ApiKey`)?.value||"",t[`${e}Prompt`]=document.getElementById(`${e}Prompt`)?.value||"";try{await chrome.storage.sync.set(t),this.settings={...this.settings,...t}}catch(t){console.error(`Error saving ${e} settings:`,t)}}async saveSettings(){const e={temperature:parseFloat(document.getElementById("temperatureSlider")?.value||.7),maxTokens:parseInt(document.getElementById("maxTokens")?.value||8192),autoDetect:document.getElementById("autoDetect")?.checked||!1,showBanner:document.getElementById("showBanner")?.checked||!1,enableChunking:document.getElementById("enableChunking")?.checked||!1};try{await chrome.storage.sync.set(e),this.settings={...this.settings,...e},this.showStatus("Settings saved successfully!","success")}catch(e){console.error("Error saving settings:",e),this.showStatus("Failed to save settings","error")}}resetSettings(){if(confirm("Reset all settings to default values?")){const e=document.getElementById("temperatureSlider"),t=document.getElementById("temperatureValue");e&&(e.value="0.7",t&&(t.textContent="0.7"));const n=document.getElementById("maxTokens");n&&(n.value="8192");const a=document.getElementById("autoDetect");a&&(a.checked=!0);const s=document.getElementById("showBanner");s&&(s.checked=!0);const i=document.getElementById("enableChunking");i&&(i.checked=!0),this.functions.forEach((e=>{const t=document.getElementById(`${e}Provider`),n=document.getElementById(`${e}ApiKey`),a=document.getElementById(`${e}Prompt`);t&&(t.value="gemini"),n&&(n.value=""),a&&(a.value=""),this.updateModelOptions(e)})),this.saveSettings()}}getFunctionSettings(e){return{provider:document.getElementById(`${e}Provider`)?.value||"gemini",model:document.getElementById(`${e}Model`)?.value||"gemini-1.5-flash",apiKey:document.getElementById(`${e}ApiKey`)?.value||"",prompt:document.getElementById(`${e}Prompt`)?.value||""}}showStatus(e,t="info",n="statusMessage"){const a=document.getElementById(n),s=document.getElementById("status");if(a){const n=a.querySelector(".status-text");n&&(n.textContent=e,a.style.display="flex",a.className=`status-message ${t}`)}s&&(s.textContent=e,s.className=`status-bar ${t}`)}hideStatus(e="statusMessage"){const t=document.getElementById(e);t&&(t.style.display="none")}capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}async addNewFeature(e,t=null){if(!this.functions.includes(e)){this.functions.push(e);const n=document.querySelector(".tabs"),a=document.querySelector(".tab-contents");if(n&&a){const s=document.createElement("button");s.className="tab-btn",s.setAttribute("data-tab",e),s.textContent=t||this.capitalize(e),n.appendChild(s);const i=document.createElement("div");i.id=e,i.className="tab-content",i.innerHTML=this.generateFeatureHTML(e,t),a.appendChild(i),this.setupNewFeatureHandlers(e),this.updateProviderDropdown(e),console.log(`New feature '${e}' added successfully`)}}}generateFeatureHTML(e,t){const n=t||this.capitalize(e);return`\n      <div class="function-config">\n        <h3>${n} Configuration</h3>\n\n        <div class="form-group">\n          <label for="${e}Provider">AI Service:</label>\n          <select id="${e}Provider" class="form-control">\n            <option value="">Select a service...</option>\n          </select>\n        </div>\n\n        <div class="form-group">\n          <label for="${e}Model">Model:</label>\n          <select id="${e}Model" class="form-control">\n            <option value="">Select model...</option>\n          </select>\n        </div>\n\n        <div class="form-group">\n          <label for="${e}ApiKey">API Key:</label>\n          <div class="api-key-container">\n            <input type="password" id="${e}ApiKey" class="form-control"\n                   placeholder="Enter your API key">\n            <button type="button" id="test${this.capitalize(e)}ApiKey"\n                    class="btn btn-test">Test</button>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <label for="${e}Prompt">Custom Prompt:</label>\n          <textarea id="${e}Prompt" class="form-control" rows="3"\n                    placeholder="Enter custom prompt for ${n.toLowerCase()}..."></textarea>\n        </div>\n\n        <button type="button" id="${e}Btn" class="btn btn-primary btn-action">\n          <span class="btn-text">${n}</span>\n        </button>\n\n        <div id="${e}StatusMessage" class="status-message" style="display: none;">\n          <span class="status-text"></span>\n        </div>\n      </div>\n    `}setupNewFeatureHandlers(e){const t=document.getElementById(`${e}Btn`);t&&t.addEventListener("click",(()=>{this.executeAction(e)}));const n=document.getElementById(`test${this.capitalize(e)}ApiKey`);n&&n.addEventListener("click",(()=>{this.testApiKey(e)}));const a=document.getElementById(`${e}Provider`);a&&a.addEventListener("change",(async()=>{await this.updateModelOptions(e)})),document.querySelectorAll(`#${e}Provider, #${e}Model, #${e}ApiKey, #${e}Prompt`).forEach((t=>{t.addEventListener("change",(()=>{this.saveFunctionSettings(e)}))}));const s=document.querySelector(`[data-tab="${e}"]`);s&&s.addEventListener("click",(()=>{const t=document.querySelectorAll(".tab-btn"),n=document.querySelectorAll(".tab-content");t.forEach((e=>e.classList.remove("active"))),n.forEach((e=>e.classList.remove("active"))),s.classList.add("active"),document.getElementById(e).classList.add("active"),this.currentTab=e}))}async removeService(e){this.serviceRegistry.has(e)&&(this.serviceRegistry.delete(e),this.validatedApiKeys.delete(e),await this.saveServiceRegistry(),await this.refreshAllProviderDropdowns(),console.log(`Service '${e}' removed`))}async refreshService(e){if(this.validatedApiKeys.has(e))try{const t=this.validatedApiKeys.get(e);await this.validateAndRegisterService(e,t),await this.refreshAllProviderDropdowns(),console.log(`Service '${e}' refreshed`)}catch(t){console.error(`Failed to refresh service '${e}':`,t)}}getAvailableServices(){return Array.from(this.serviceRegistry.keys()).filter((e=>this.serviceRegistry.get(e).validated))}getServiceModels(e){const t=this.serviceRegistry.get(e);return t?t.models:[]}isServiceValidated(e){const t=this.serviceRegistry.get(e);return t&&t.validated}}document.addEventListener("DOMContentLoaded",(()=>{new NovelSynthPopup}));